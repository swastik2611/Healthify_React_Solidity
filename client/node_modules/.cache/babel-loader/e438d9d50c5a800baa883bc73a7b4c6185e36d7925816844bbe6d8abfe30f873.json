{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  for (var _len = arguments.length, lengths = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    lengths[_key - 1] = arguments[_key];\n  }\n  if (lengths.length > 0 && !lengths.includes(b.length)) throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance) {\n  let checkFinished = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\nexports.output = output;\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output\n};\nexports.default = assert;","map":{"version":3,"names":["number","n","Number","isSafeInteger","Error","exports","bool","b","bytes","Uint8Array","TypeError","_len","arguments","length","lengths","Array","_key","includes","hash","create","outputLen","blockLen","exists","instance","checkFinished","undefined","destroyed","finished","output","out","min","assert","default"],"sources":["/Users/swastik2611/Documents/Healthify_React_Solidity/client/node_modules/@noble/hashes/src/_assert.ts"],"sourcesContent":["export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n"],"mappings":";;;;;;AAAA,SAAgBA,MAAMA,CAACC,CAAS;EAC9B,IAAI,CAACC,MAAM,CAACC,aAAa,CAACF,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,MAAM,IAAIG,KAAK,CAAC,2BAA2BH,CAAC,EAAE,CAAC;AACxF;AAFAI,OAAA,CAAAL,MAAA,GAAAA,MAAA;AAIA,SAAgBM,IAAIA,CAACC,CAAU;EAC7B,IAAI,OAAOA,CAAC,KAAK,SAAS,EAAE,MAAM,IAAIH,KAAK,CAAC,yBAAyBG,CAAC,EAAE,CAAC;AAC3E;AAFAF,OAAA,CAAAC,IAAA,GAAAA,IAAA;AAIA,SAAgBE,KAAKA,CAACD,CAAyB,EAAsB;EACnE,IAAI,EAAEA,CAAC,YAAYE,UAAU,CAAC,EAAE,MAAM,IAAIC,SAAS,CAAC,qBAAqB,CAAC;EAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADzBC,OAAiB,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAjBF,OAAiB,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAEnE,IAAIF,OAAO,CAACD,MAAM,GAAG,CAAC,IAAI,CAACC,OAAO,CAACG,QAAQ,CAACV,CAAC,CAACM,MAAM,CAAC,EACnD,MAAM,IAAIH,SAAS,CAAC,iCAAiCI,OAAO,mBAAmBP,CAAC,CAACM,MAAM,EAAE,CAAC;AAC9F;AAJAR,OAAA,CAAAG,KAAA,GAAAA,KAAA;AAYA,SAAgBU,IAAIA,CAACA,IAAU;EAC7B,IAAI,OAAOA,IAAI,KAAK,UAAU,IAAI,OAAOA,IAAI,CAACC,MAAM,KAAK,UAAU,EACjE,MAAM,IAAIf,KAAK,CAAC,iDAAiD,CAAC;EACpEJ,MAAM,CAACkB,IAAI,CAACE,SAAS,CAAC;EACtBpB,MAAM,CAACkB,IAAI,CAACG,QAAQ,CAAC;AACvB;AALAhB,OAAA,CAAAa,IAAA,GAAAA,IAAA;AAOA,SAAgBI,MAAMA,CAACC,QAAa,EAAsB;EAAA,IAApBC,aAAa,GAAAZ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAa,SAAA,GAAAb,SAAA,MAAG,IAAI;EACxD,IAAIW,QAAQ,CAACG,SAAS,EAAE,MAAM,IAAItB,KAAK,CAAC,kCAAkC,CAAC;EAC3E,IAAIoB,aAAa,IAAID,QAAQ,CAACI,QAAQ,EAAE,MAAM,IAAIvB,KAAK,CAAC,uCAAuC,CAAC;AAClG;AAHAC,OAAA,CAAAiB,MAAA,GAAAA,MAAA;AAIA,SAAgBM,MAAMA,CAACC,GAAQ,EAAEN,QAAa;EAC5Cf,KAAK,CAACqB,GAAG,CAAC;EACV,MAAMC,GAAG,GAAGP,QAAQ,CAACH,SAAS;EAC9B,IAAIS,GAAG,CAAChB,MAAM,GAAGiB,GAAG,EAAE;IACpB,MAAM,IAAI1B,KAAK,CAAC,yDAAyD0B,GAAG,EAAE,CAAC;;AAEnF;AANAzB,OAAA,CAAAuB,MAAA,GAAAA,MAAA;AAQA,MAAMG,MAAM,GAAG;EACb/B,MAAM;EACNM,IAAI;EACJE,KAAK;EACLU,IAAI;EACJI,MAAM;EACNM;CACD;AAEDvB,OAAA,CAAA2B,OAAA,GAAeD,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}